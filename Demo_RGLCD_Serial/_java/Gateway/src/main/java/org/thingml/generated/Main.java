/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import org.thingml.java.*;
import org.thingml.java.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;
import org.thingml.generated.network.*;
public class Main {
//Things
public static Gateway Gateway_g;
public static void main(String args[]) {
//Things
Gateway_g = (Gateway) new Gateway("g (Gateway)").buildBehavior(null, null);
//Network components for external connectors
/*$NETWORK$*/
SerialJava null_Serial = (SerialJava) new SerialJava("COM8", 115200).buildBehavior(null, null);

//Connecting internal ports...
//Connectors
//External Connectors
/*$EXT CONNECTORS$*/
null_Serial.getMyPort_port().addListener(Gateway_g.getMyPort_port());
Gateway_g.getMyPort_port().addListener(null_Serial.getMyPort_port());

//Init instances (queues, etc)
Gateway_g.init();
/*$START$*/
null_Serial.init().start();

Gateway_g.start();
//Hook to stop instances following client/server dependencies (clients firsts)
Runtime.getRuntime().addShutdownHook(new Thread() {
public void run() {
System.out.println("Terminating ThingML app...");
Gateway_g.stop();
/*$STOP$*/
null_Serial.stop();

System.out.println("ThingML app terminated. RIP!");}
});

}
}
